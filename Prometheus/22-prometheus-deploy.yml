---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  sessionAffinity: ClientIP
  ports:
  - port: 9090
    protocol: TCP
  selector:
    app: prometheus
---


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key:      app
                operator: In
                values:
                -  prometheus
            topologyKey: kubernetes.io/hostname
      containers:
      - image: prom/prometheus:v2.19.3
        name: prometheus
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.enable-lifecycle
        ports:
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - mountPath: "/prometheus"
          name: data
        - mountPath: "/etc/prometheus"
          name: config-volume
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 2500Mi
      - image: tutum/curl
        name: reloader
        args:
        - /bin/sh 
        - /srv/run.sh
        volumeMounts:
        - mountPath: "/srv"
          name:      prometheus-reloader
          readOnly:  true
        - mountPath: "/etc/prometheus"
          name:      config-volume
          readOnly:  true
        resources:
          requests:
            cpu: 1m
            memory: 5Mi
          limits:
            cpu: 10m
            memory: 20Mi
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: prometheus-config
          items:
          - key:  prometheus.yml
            path: prometheus.yml
          - key:  rules.yml
            path: rules.yml
        name: config-volume
      - configMap:
          name: prometheus-reloader
        name:   prometheus-reloader
   
